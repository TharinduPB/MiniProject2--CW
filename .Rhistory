add_trace(data = malmsbury_rate_rise, x = ~timestamp, y = ~level, type = "scatter",
mode = "lines+ markers", name = "mad", color = ~mad,  line=(list(width = 0.75))) %>%
# add_trace(x= verified_2021$timestamp, y =verified_2021$verified_level, type = "scatter",
#           mode = "lines", name= "wims", line = (list(width = 1))) %>%
layout(title = 'original vs smooth',
xaxis = list(title = 'timestamp'),
yaxis = list(title = 'level'))
plot_ly() %>%
add_trace(data = malmsbury_rate_rise, x = ~timestamp, y = ~level, type = "scatter",
mode = "lines+ markers", name = "mad", color = ~MAD,  line=(list(width = 0.75))) %>%
# add_trace(x= verified_2021$timestamp, y =verified_2021$verified_level, type = "scatter",
#           mode = "lines", name= "wims", line = (list(width = 1))) %>%
layout(title = 'original vs smooth',
xaxis = list(title = 'timestamp'),
yaxis = list(title = 'level'))
plot_ly() %>%
add_trace(data = malmsbury_rate_rise, x = ~timestamp, y = ~rate_rise, type = "scatter",
mode = "lines+ markers", name = "mad", color = ~MAD,  line=(list(width = 0.75))) %>%
# add_trace(x= verified_2021$timestamp, y =verified_2021$verified_level, type = "scatter",
#           mode = "lines", name= "wims", line = (list(width = 1))) %>%
layout(title = 'original vs smooth',
xaxis = list(title = 'timestamp'),
yaxis = list(title = 'level'))
View(malmsbury_rate_rise)
plot_ly() %>%
add_trace(data = malmsbury_rate_rise, x = ~timestamp, y = ~rate, type = "scatter",
mode = "lines+ markers", name = "mad", color = ~MAD,  line=(list(width = 0.75))) %>%
# add_trace(x= verified_2021$timestamp, y =verified_2021$verified_level, type = "scatter",
#           mode = "lines", name= "wims", line = (list(width = 1))) %>%
layout(title = 'original vs smooth',
xaxis = list(title = 'timestamp'),
yaxis = list(title = 'level'))
plot_ly() %>%
add_trace(data = malmsbury_rate_rise, x = ~timestamp, y = ~rate, type = "scatter",
mode = "lines+ markers", name = "mad", color = ~MAD, markers = list(size=2),
line=(list(width = 0.75))) %>%
# add_trace(x= verified_2021$timestamp, y =verified_2021$verified_level, type = "scatter",
#           mode = "lines", name= "wims", line = (list(width = 1))) %>%
layout(title = 'original vs smooth',
xaxis = list(title = 'timestamp'),
yaxis = list(title = 'level'))
plot_ly() %>%
add_trace(data = malmsbury_rate_rise, x = ~timestamp, y = ~rate, type = "scatter",
mode = "lines+ markers", name = "mad", color = ~MAD, marker = list(size=2),
line=(list(width = 0.75))) %>%
# add_trace(x= verified_2021$timestamp, y =verified_2021$verified_level, type = "scatter",
#           mode = "lines", name= "wims", line = (list(width = 1))) %>%
layout(title = 'original vs smooth',
xaxis = list(title = 'timestamp'),
yaxis = list(title = 'level'))
plot_ly() %>%
add_trace(data = malmsbury_rate_rise, x = ~timestamp, y = ~rate, type = "scatter",
mode = "lines+ markers", name = "mad", color = ~MAD, marker = list(size=4),
line=(list(width = 0.75))) %>%
# add_trace(x= verified_2021$timestamp, y =verified_2021$verified_level, type = "scatter",
#           mode = "lines", name= "wims", line = (list(width = 1))) %>%
layout(title = 'original vs smooth',
xaxis = list(title = 'timestamp'),
yaxis = list(title = 'level'))
plot_ly() %>%
add_trace(data = malmsbury_rate_rise, x = ~timestamp, y = ~rate, type = "scatter",
mode = "lines+ markers", name = "mad", color = ~MAD, marker = list(size=5),
line=(list(width = 0.75))) %>%
# add_trace(x= verified_2021$timestamp, y =verified_2021$verified_level, type = "scatter",
#           mode = "lines", name= "wims", line = (list(width = 1))) %>%
layout(title = 'original vs smooth',
xaxis = list(title = 'timestamp'),
yaxis = list(title = 'level'))
plot_ly() %>%
add_trace(data = malmsbury_rate_rise, x = ~timestamp, y = ~rate, type = "scatter",
mode = "lines+ markers", color = ~MAD, marker = list(size=5),
line=(list(width = 0.75))) %>%
# add_trace(x= verified_2021$timestamp, y =verified_2021$verified_level, type = "scatter",
#           mode = "lines", name= "wims", line = (list(width = 1))) %>%
layout(title = 'original vs smooth',
xaxis = list(title = 'timestamp'),
yaxis = list(title = 'level'))
View(malmsbury_rate_rise)
plot_ly() %>%
add_trace(data = malmsbury_rate_rise, x = ~timestamp, y = ~rate, type = "scatter",
mode = "lines+markers", color = ~MAD, marker = list(size=5),
line=(list(width = 0.75))) %>%
# add_trace(x= verified_2021$timestamp, y =verified_2021$verified_level, type = "scatter",
#           mode = "lines", name= "wims", line = (list(width = 1))) %>%
layout(title = 'original vs smooth',
xaxis = list(title = 'timestamp'),
yaxis = list(title = 'level'))
malmsbury_rate_rise2 <- malmsbury_rate_rise %>%
dplyr::filter(!MAD)
plot_ly() %>%
add_trace(data = malmsbury_rate_rise , x= ~timestamp, y=~level ,type = "scatter",
mode = "lines+markers" , marker = list(size=5),
line=(list(width = 0.75))) %>%
layout(title = 'original vs smooth',
xaxis = list(title = 'timestamp'),
yaxis = list(title = 'level'))
plot_ly() %>%
add_trace(data = malmsbury_rate_rise , x= ~timestamp, y=~level ,type = "scatter",
mode = "lines" , line=(list(width = 0.75))) %>%
layout(title = 'original vs smooth',
xaxis = list(title = 'timestamp'),
yaxis = list(title = 'level'))
plot_ly() %>%
add_trace(data = malmsbury_rate_rise , x= ~timestamp, y=~level ,type = "scatter",
mode = "lines" , line=(list(width = 0.75))) %>%
add_trace(data= res_2021_3, x=~timestamp, y=~level,type = "scatter",
mode = "lines" , line=(list(width = 0.75))) %>%
layout(title = 'original vs smooth',
xaxis = list(title = 'timestamp'),
yaxis = list(title = 'level'))
malmsbury_rate_rise <- malmsbury_rate_rise %>%
mutate( MAD = abs(malmsbury_rate_rise$rate - median(malmsbury_rate_rise$rate, na.rm = TRUE)) /
mad(rate , na.rm = TRUE) >= 2.5
)
malmsbury_rate_rise1 <- malmsbury_rate_rise %>%
dplyr::filter(MAD)
malmsbury_rate_rise2 <- malmsbury_rate_rise %>%
dplyr::filter(!MAD)
plot_ly() %>%
add_trace(data = malmsbury_rate_rise2 , x= ~timestamp, y=~level ,type = "scatter",
mode = "lines" , line=(list(width = 0.75))) %>%
add_trace(data= res_2021_3, x=~timestamp, y=~level,type = "scatter",
mode = "lines" , line=(list(width = 0.75))) %>%
layout(title = 'original vs smooth',
xaxis = list(title = 'timestamp'),
yaxis = list(title = 'level'))
View(malmsbury_rate_rise)
View(malmsbury_rate_rise)
View(malmsbury_rate_rise)
malmsbury_21 <- read_csv("rawdata.csv") %>%
select(timestamp = Timestamp, level = Level1) %>%
arrange(timestamp) %>%
dplyr::filter( !is.na(level) & level !=0 & between(as.Date(timestamp), as.Date("2021-01-01"),
as.Date("2021-12-31")))
library(tidyverse)
library(plotly)
library(TTR)
library(zoo)
library(signal)
library(levelsmooth)
malmsbury_21 <- read_csv("rawdata.csv") %>%
select(timestamp = Timestamp, level = Level1) %>%
arrange(timestamp) %>%
dplyr::filter( !is.na(level) & level !=0 & between(as.Date(timestamp), as.Date("2021-01-01"),
as.Date("2021-12-31")))
malmsbury_21_ori <- malmsbury_21
res_2021_1 <- phycon(malmsbury_21,447.8,435.0)
res_2021_2 <- mad_outliers(res_2021_1, 3.5)
res_2021_3 <- sgfilter(res_2021_2,0,105,0.03)
# Read verified data
verified <- read_csv("406220.csv")  %>%
select(timestamp = Datetime ,
verified_level = `Water Level` ,
qc = QC ) %>%
mutate(timestamp = lubridate::dmy_hms(timestamp))
verified_2021 <- verified %>%
arrange(timestamp) %>%
dplyr::filter( between(as.Date(timestamp), as.Date("2021-01-01"),
as.Date("2021-12-31")))
malmsbury_rate_rise <- malmsbury_21_ori[1:2]
malmsbury_rate_rise <- malmsbury_rate_rise %>%
mutate(  dh = dh <- abs(malmsbury_rate_rise$level - lag(malmsbury_rate_rise$level)),
dt = dt <- malmsbury_rate_rise$timestamp - lag(malmsbury_rate_rise$timestamp),
rate = rate <- dh / as.numeric(dt),
rate_rise = rate_rise <- rate >= 0.023
)
View(malmsbury_rate_rise)
if(malmsbury_rate_rise$rate_rise == TRUE){
print("repair")
}
if(all(malmsbury_rate_rise$rate_rise == TRUE)){
print("repair")
}
for(rate_rise in malmsbury_rate_rise) {
if(all(malmsbury_rate_rise$rate_rise == TRUE)){
print("repair")
}
}
for(rate_rise in malmsbury_rate_rise) {
if(rate_rise == TRUE)){
for(rate_rise in malmsbury_rate_rise) {
if(rate_rise == TRUE){
print("repair")
}
}
for(rate_rise in malmsbury_rate_rise$rate_rise) {
if(rate_rise == TRUE){
print("repair")
}
}
for(rate_rise in malmsbury_rate_rise$rate_rise) {
if(rate_rise = TRUE){
for(rate_rise in malmsbury_rate_rise$rate_rise) {
if(rate_rise == TRUE){
print("repair")
}
}
for(rate_rise in malmsbury_rate_rise$rate_rise) {
if(rate_rise == TRUE){
print("repair")
}
}
View(malmsbury_rate_rise)
for(rate_rise in malmsbury_rate_rise$rate_rise) {
if(rate_rise == TRUE || is.na = TRUE){
for(rate_rise in malmsbury_rate_rise$rate_rise) {
if(rate_rise == TRUE || is.na == TRUE){
print("repair")
}
}
for(rate_rise in malmsbury_rate_rise$rate_rise) {
if(rate_rise == TRUE){
print("repair")
}
}
malmsbury_rate_rise <- malmsbury_rate_rise %>%
mutate(  dh = dh <- abs(malmsbury_rate_rise$level - lag(malmsbury_rate_rise$level)),
dt = dt <- malmsbury_rate_rise$timestamp - lag(malmsbury_rate_rise$timestamp),
rate = rate <- dh / as.numeric(dt),
rate_rise = rate_rise <- rate >= 0.023,
dplyr::filter(!NA)
)
malmsbury_rate_rise <- malmsbury_rate_rise %>%
mutate(  dh = dh <- abs(malmsbury_rate_rise$level - lag(malmsbury_rate_rise$level)),
dt = dt <- malmsbury_rate_rise$timestamp - lag(malmsbury_rate_rise$timestamp),
rate = rate <- dh / as.numeric(dt),
rate_rise = rate_rise <- rate >= 0.023,
dplyr::filter(!is.na(rate_rise))
)
malmsbury_rate_rise <- malmsbury_rate_rise %>%
mutate(  dh = dh <- abs(malmsbury_rate_rise$level - lag(malmsbury_rate_rise$level)),
dt = dt <- malmsbury_rate_rise$timestamp - lag(malmsbury_rate_rise$timestamp),
rate = rate <- dh / as.numeric(dt),
rate_rise = rate_rise <- rate >= 0.023,
dplyr::filter(!is.na(dh))
)
malmsbury_rate_rise <- malmsbury_rate_rise %>%
mutate(  dh = dh <- abs(malmsbury_rate_rise$level - lag(malmsbury_rate_rise$level)),
dt = dt <- malmsbury_rate_rise$timestamp - lag(malmsbury_rate_rise$timestamp),
rate = rate <- dh / as.numeric(dt),
rate_rise = rate_rise <- rate >= 0.023) %>%
dplyr::filter(is.na(dh))
View(malmsbury_rate_rise)
malmsbury_rate_rise <- malmsbury_rate_rise %>%
mutate(  dh = dh <- abs(malmsbury_rate_rise$level - lag(malmsbury_rate_rise$level)),
dt = dt <- malmsbury_rate_rise$timestamp - lag(malmsbury_rate_rise$timestamp),
rate = rate <- dh / as.numeric(dt),
rate_rise = rate_rise <- rate >= 0.023) %>%
dplyr::filter(!is.na(dh))
View(malmsbury_rate_rise)
malmsbury_rate_rise <- malmsbury_21_ori[1:2]
malmsbury_rate_rise <- malmsbury_rate_rise %>%
mutate(  dh = dh <- abs(malmsbury_rate_rise$level - lag(malmsbury_rate_rise$level)),
dt = dt <- malmsbury_rate_rise$timestamp - lag(malmsbury_rate_rise$timestamp),
rate = rate <- dh / as.numeric(dt),
rate_rise = rate_rise <- rate >= 0.023) %>%
dplyr::filter(!is.na(dh))
View(malmsbury_rate_rise)
for(rate_rise in malmsbury_rate_rise$rate_rise) {
if(rate_rise == TRUE){
print("repair")
}
}
install.packages('base')
install.packages("base")
install.packages("base")
install.packages("base")
library(base)
rle(malmsbury_rate_rise$rate_rise)
rle(rate_rise)
true_index  <- which(malmsbury_rate_rise1$rate_rise== TRUE)
true_index  <- which(malmsbury_rate_rise$rate_rise== TRUE)
view(true_index)
print(true_index)
for(rate_rise in malmsbury_rate_rise$rate_rise){
if(true_index + 8 == TRUE){
print(repair)
}
}
for(rate_rise in malmsbury_rate_rise$rate_rise) {
if(rate_rise == TRUE){
print("repair")
}
}
print(true_index)
for(index in true_index){
if(malmsbury_rate_rise$rate_rise == TRUE){
print('check sensor')
}
}
for(index in true_index){
if(malmsbury_rate_rise$rate_rise = TRUE){
for(index in true_index){
if(malmsbury_rate_rise$rate_rise[index] == TRUE){
print('check sensor')
}
}
for(index in true_index){
if(malmsbury_rate_rise$rate_rise[index +12] == TRUE){
print('check sensor')
}
}
for(index in true_index){
if(malmsbury_rate_rise$rate_rise[index +4] == TRUE){
print('check sensor')
}
}
for(index in true_index){
if(malmsbury_rate_rise$rate_rise[index +1] == TRUE){
print('check sensor')
}
}
malmsbury_rate_rise <- malmsbury_21_ori[1:2]
malmsbury_rate_rise <- malmsbury_rate_rise %>%
mutate(  dh = dh <- abs(malmsbury_rate_rise$level - lag(malmsbury_rate_rise$level)),
dt = dt <- malmsbury_rate_rise$timestamp - lag(malmsbury_rate_rise$timestamp),
rate = rate <- dh / as.numeric(dt),
rate_rise = rate_rise <- rate >= 0.013) %>%
dplyr::filter(!is.na(dh))
library(tidyverse)
library(plotly)
library(TTR)
library(zoo)
library(signal)
library(levelsmooth)
library(base)
malmsbury_21 <- read_csv("rawdata.csv") %>%
select(timestamp = Timestamp, level = Level1) %>%
arrange(timestamp) %>%
dplyr::filter( !is.na(level) & level !=0 & between(as.Date(timestamp), as.Date("2021-01-01"),
as.Date("2021-12-31")))
malmsbury_21_ori <- malmsbury_21
res_2021_1 <- phycon(malmsbury_21,447.8,435.0)
res_2021_2 <- mad_outliers(res_2021_1, 3.5)
res_2021_3 <- sgfilter(res_2021_2,0,105,0.03)
verified <- read_csv("406220.csv")  %>%
select(timestamp = Datetime ,
verified_level = `Water Level` ,
qc = QC ) %>%
mutate(timestamp = lubridate::dmy_hms(timestamp))
verified_2021 <- verified %>%
arrange(timestamp) %>%
dplyr::filter( between(as.Date(timestamp), as.Date("2021-01-01"),
as.Date("2021-12-31")))
malmsbury_rate_rise <- malmsbury_21_ori[1:2]
malmsbury_rate_rise <- malmsbury_rate_rise %>%
mutate(  dh = dh <- abs(malmsbury_rate_rise$level - lag(malmsbury_rate_rise$level)),
dt = dt <- malmsbury_rate_rise$timestamp - lag(malmsbury_rate_rise$timestamp),
rate = rate <- dh / as.numeric(dt),
rate_rise = rate_rise <- rate >= 0.013) %>%
dplyr::filter(!is.na(dh))
true_index  <- which(malmsbury_rate_rise$rate_rise== TRUE)
for(index in true_index){
if(malmsbury_rate_rise$rate_rise[index +1] == TRUE){
print('check sensor')
}
}
for(index in true_index){
if(malmsbury_rate_rise$rate_rise[index +1, index+2, index+3] == TRUE){
print('check sensor')
}
}
plot_ly() %>%
add_trace(data = malmsbury_rate_rise, x = ~timestamp, y = ~rate, type = "scatter",
mode = "lines+markers", color = ~MAD, marker = list(size=5),
line=(list(width = 0.75))) %>%
# add_trace(x= verified_2021$timestamp, y =verified_2021$verified_level, type = "scatter",
#           mode = "lines", name= "wims", line = (list(width = 1))) %>%
layout(title = 'original vs smooth',
xaxis = list(title = 'timestamp'),
yaxis = list(title = 'level'))
plot_ly() %>%
add_trace(data = malmsbury_rate_rise, x = ~timestamp, y = ~rate, type = "scatter",
mode = "lines+markers", marker = list(size=5),
line=(list(width = 0.75))) %>%
# add_trace(x= verified_2021$timestamp, y =verified_2021$verified_level, type = "scatter",
#           mode = "lines", name= "wims", line = (list(width = 1))) %>%
layout(title = 'original vs smooth',
xaxis = list(title = 'timestamp'),
yaxis = list(title = 'level'))
for(index in true_index){
if(malmsbury_rate_rise$rate_rise[index +1] == TRUE){
print('check sensor')
}elseif(malmsbury_rate_rise$rate_rise[index + 2] == TRUE){
for(index in true_index){
if(malmsbury_rate_rise$rate_rise[index +1] == TRUE){
print('check sensor')
}else if(malmsbury_rate_rise$rate_rise[index + 2] == TRUE){
print('check sensor')
}else if(malmsbury_rate_rise$rate_rise[index + 3]== TRUE){
print('check sensor')
}
}
}
for(index in true_index){
if(malmsbury_rate_rise$rate_rise[(index) :(index+ 12)] == TRUE){
print('check sensor')
}
}
for(index in true_index){
if(all(malmsbury_rate_rise$rate_rise[(index) :(index+ 4)]) == TRUE){
print('check sensor')
}
}
for(index in true_index){
if(all(malmsbury_rate_rise$rate_rise[(index) :(index+ 2)]) == TRUE){
print('check sensor')
}
}
for(index in true_index){
if(all(malmsbury_rate_rise$rate_rise[(index) :(index- 2)]) == TRUE){
print('check sensor')
}
}
malmsbury_rate_rise <- malmsbury_21_ori[1:2]
malmsbury_rate_rise <- malmsbury_rate_rise %>%
mutate(  dh = dh <- abs(malmsbury_rate_rise$level - lag(malmsbury_rate_rise$level)),
dt = dt <- malmsbury_rate_rise$timestamp - lag(malmsbury_rate_rise$timestamp),
rate = rate <- dh / as.numeric(dt),
rate_rise = rate_rise <- rate >= 0.023) %>%
dplyr::filter(!is.na(dh))
true_index  <- which(malmsbury_rate_rise$rate_rise== TRUE)
for(index in true_index){
if(all(malmsbury_rate_rise$rate_rise[(index) :(index- 2)]) == TRUE){
print('check sensor')
}
}
for(index in true_index){
if(all(malmsbury_rate_rise$rate_rise[(index) :(index- 2)]) == TRUE){
print('check sensor', index, malmsbury_rate_rise$level)
}
}
for(index in true_index){
if(all(malmsbury_rate_rise$rate_rise[(index) :(index- 2)]) == TRUE){
print('check sensor', "index", "malmsbury_rate_rise$level")
}
}
for(index in true_index){
if(all(malmsbury_rate_rise$rate_rise[(index) :(index- 2)]) == TRUE){
print('check sensor', index, malmsbury_rate_rise$level[index])
}
}
for(index in true_index){
if(all(malmsbury_rate_rise$rate_rise[(index) :(index- 2)]) == TRUE){
print(paste('check sensor', index, malmsbury_rate_rise$level[index]))
}
}
for(index in true_index){
if(all(malmsbury_rate_rise$rate_rise[(index) :(index- 2)]) == TRUE){
print(paste('check sensor', index, malmsbury_rate_rise$level[index],
malmsbury_rate_rise$timestamp[index]))
}
}
malmsbury_rate_rise <- malmsbury_21_ori[1:2]
malmsbury_rate_rise <- malmsbury_rate_rise %>%
mutate(  dh = dh <- abs(malmsbury_rate_rise$level - lag(malmsbury_rate_rise$level)),
dt = dt <- malmsbury_rate_rise$timestamp - lag(malmsbury_rate_rise$timestamp),
rate = rate <- dh / as.numeric(dt),
rate_rise = rate_rise <- rate >= 0.01) %>%
dplyr::filter(!is.na(dh))
true_index  <- which(malmsbury_rate_rise$rate_rise== TRUE)
for(index in true_index){
if(all(malmsbury_rate_rise$rate_rise[(index) :(index- 2)]) == TRUE){
print(paste('check sensor', index, malmsbury_rate_rise$level[index],
malmsbury_rate_rise$timestamp[index]))
}
}
for(index in true_index){
if(all(malmsbury_rate_rise$rate_rise[(index) :(index- 2)]) == TRUE){
print(paste('check sensor', "at index" index, "level" malmsbury_rate_rise$level[index],
for(index in true_index){
if(all(malmsbury_rate_rise$rate_rise[(index) :(index- 2)]) == TRUE){
print(paste('check sensor', "at index", index, "level", malmsbury_rate_rise$level[index],
"timestamp", malmsbury_rate_rise$timestamp[index]))
}
}
for(index in true_index){
if(all(malmsbury_rate_rise$rate_rise[(index) :(index- 2)]) == TRUE){
print(paste('check sensor', "level", malmsbury_rate_rise$level[index],
"timestamp", malmsbury_rate_rise$timestamp[index]))
}
}
plot_ly() %>%
add_trace(data = malmsbury_rate_rise , x= ~timestamp, y=~level ,type = "scatter",
mode = "lines" , line=(list(width = 0.75))) %>%
add_trace(data= res_2021_3, x=~timestamp, y=~level,type = "scatter",
mode = "lines" , line=(list(width = 0.75))) %>%
layout(title = 'original vs smooth',
xaxis = list(title = 'timestamp'),
yaxis = list(title = 'level'))
plot_ly() %>%
# add_trace(data = malmsbury_rate_rise , x= ~timestamp, y=~level ,type = "scatter",
#           mode = "lines" , line=(list(width = 0.75))) %>%
add_trace(data= res_2021_3, x=~timestamp, y=~level,type = "scatter",
mode = "lines" , line=(list(width = 0.75))) %>%
layout(title = 'original vs smooth',
xaxis = list(title = 'timestamp'),
yaxis = list(title = 'level'))
for(index in true_index){
if(all(malmsbury_rate_rise$rate_rise[(index) :(index- 2)]) == TRUE){
print(paste('check sensor', "level", malmsbury_rate_rise$level[index],
"timestamp", malmsbury_rate_rise$timestamp[index]))
}
}
plot_ly() %>%
add_trace(data = malmsbury_rate_rise , x= ~timestamp, y=~level ,type = "scatter",
mode = "lines" , line=(list(width = 0.75))) %>%
add_trace(data= res_2021_3, x=~timestamp, y=~level,type = "scatter",
mode = "lines" , line=(list(width = 0.75))) %>%
layout(title = 'original vs smooth',
xaxis = list(title = 'timestamp'),
yaxis = list(title = 'level'))
