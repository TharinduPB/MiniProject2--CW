as.Date("2021-12-31")))
malmsbury_21_ori <- malmsbury_21
full_supply_level <- 447.8
min_level <- 435.0
malmsbury_21 <- malmsbury_21 %>%
mutate(min = level <= min_level,
FSL = level > full_supply_level + 2,
MAD = abs(level - median(level)) / mad(level) >= 3.5
)
malmsbury_21 <- malmsbury_21 %>%
dplyr::filter (!FSL, !min, !MAD)
malmsbury_play <- malmsbury_21
malm_level <- malmsbury_play$level
malm_time <- malmsbury_play$timestamp
malmsbury_zoo <- zoo(malm_level, malm_time)
malmsbury_cleaned<- malmsbury_play %>%
mutate( ewma = ewma <- EMA(malmsbury_zoo, n = 288))
View(malmsbury_cleaned)
plot_ly() %>%
add_trace(x = malmsbury_21_ori$timestamp , y = malmsbury_21_ori$level, type = "scatter",
mode = "lines", name = "Original", line=(list(width =0.5))) %>%
add_trace(x = malmsbury_21$timestamp, y = malmsbury_21$level, type = "scatter",
mode = "lines" , name = "FSL and Min removed", line=(list(width = 0.75))) %>%
add_trace(x= verified_2021$timestamp, y =verified_2021$verified_level, type = "scatter",
mode = "lines", name= "wims", line = (list(width = 1))) %>%
add_trace(x=malmsbury_cleaned$timestamp, y=malmsbury_cleaned$level, type = "scatter",
mode= "lines",name="ewma", line = (list(width = 1)))%>%
# add_trace(x = malmsbury_21$timestamp, y = smoothed , type = "scatter",
#           mode = "lines", name = "savitzky golay", line=(list(width = 1.5))) %>%
add_trace(x = malmsbury_21$timestamp, y = smoothed1 , type = "scatter",
mode = "lines", name = "savitzky golay p4", line=(list(width = 1.5))) %>%
layout(title = 'original vs smooth',
xaxis = list(title = 'timestamp'),
yaxis = list(title = 'level'))
smoothed <- sgolayfilt(malmsbury_21$level, p = 6, n = 99)
smoothed1 <- sgolayfilt(malmsbury_21$level, p = 4, n = 99)
# Read verified data
verified <- read_csv("406220.csv")  %>%
select(timestamp = Datetime ,
verified_level = `Water Level` ,
qc = QC ) %>%
mutate(timestamp = lubridate::dmy_hms(timestamp))
verified_2021 <- verified %>%
arrange(timestamp) %>%
dplyr::filter( between(as.Date(timestamp), as.Date("2021-01-01"),
as.Date("2021-12-31")))
plot_ly() %>%
add_trace(x = malmsbury_21_ori$timestamp , y = malmsbury_21_ori$level, type = "scatter",
mode = "lines", name = "Original", line=(list(width =0.5))) %>%
add_trace(x = malmsbury_21$timestamp, y = malmsbury_21$level, type = "scatter",
mode = "lines" , name = "FSL and Min removed", line=(list(width = 0.75))) %>%
add_trace(x= verified_2021$timestamp, y =verified_2021$verified_level, type = "scatter",
mode = "lines", name= "wims", line = (list(width = 1))) %>%
add_trace(x=malmsbury_cleaned$timestamp, y=malmsbury_cleaned$level, type = "scatter",
mode= "lines",name="ewma", line = (list(width = 1)))%>%
# add_trace(x = malmsbury_21$timestamp, y = smoothed , type = "scatter",
#           mode = "lines", name = "savitzky golay", line=(list(width = 1.5))) %>%
add_trace(x = malmsbury_21$timestamp, y = smoothed1 , type = "scatter",
mode = "lines", name = "savitzky golay p4", line=(list(width = 1.5))) %>%
layout(title = 'original vs smooth',
xaxis = list(title = 'timestamp'),
yaxis = list(title = 'level'))
plot_ly(data=malmsbury_play)
plot_ly() %>%
add_trace(x=malmsbury_21$timestamp, y=malmsbury_21$level, type="scatter",
mode= "lines", name="mad cleaned", line=list(widthe=1))
plot_ly() %>%
# add_trace(x = malmsbury_21_ori$timestamp , y = malmsbury_21_ori$level, type = "scatter",
#           mode = "lines", name = "Original", line=(list(width =0.5))) %>%
add_trace(x = malmsbury_21$timestamp, y = malmsbury_21$level, type = "scatter",
mode = "lines" , name = "FSL and Min removed", line=(list(width = 0.75))) %>%
add_trace(x= verified_2021$timestamp, y =verified_2021$verified_level, type = "scatter",
mode = "lines", name= "wims", line = (list(width = 1))) %>%
add_trace(x=malmsbury_cleaned$timestamp, y=malmsbury_cleaned$level, type = "scatter",
mode= "lines",name="ewma", line = (list(width = 1)))%>%
# add_trace(x = malmsbury_21$timestamp, y = smoothed , type = "scatter",
#           mode = "lines", name = "savitzky golay", line=(list(width = 1.5))) %>%
add_trace(x = malmsbury_21$timestamp, y = smoothed1 , type = "scatter",
mode = "lines", name = "savitzky golay p4", line=(list(width = 1.5))) %>%
layout(title = 'original vs smooth',
xaxis = list(title = 'timestamp'),
yaxis = list(title = 'level'))
malmsbury_21 <- read_csv("rawdata.csv") %>%
select(timestamp = Timestamp, level = Level1) %>%
arrange(timestamp) %>%
dplyr::filter( !is.na(level) & level !=0 & between(as.Date(timestamp), as.Date("2021-01-01"),
as.Date("2021-12-31")))
malmsbury_21_ori <- malmsbury_21
full_supply_level <- 447.8
min_level <- 435.0
malmsbury_21 <- malmsbury_21 %>%
mutate(min = level <= min_level,
FSL = level > full_supply_level + 2,
MAD = abs(level - median(level)) / mad(level) >= 3.5
)
malmsbury_21 <- malmsbury_21 %>%
dplyr::filter (!FSL, !min, !MAD)
malmsbury_play <- malmsbury_21
malm_level <- malmsbury_play$level
malm_time <- malmsbury_play$timestamp
malmsbury_zoo <- zoo(malm_level, malm_time)
malmsbury_cleaned<- malmsbury_play %>%
mutate( ewma = ewma <- EMA(malmsbury_zoo, n = 288))
malmsbury_cleaned <- malmsbury_cleaned %>%
mutate( sg_smooth = sg_smooth <- sgolayfilt(malmsbury_cleaned$level, p = 4, n = 99),
sg_diff = sg_diff <- sg_smooth - level,
sg_diff_con = sg_diff >= 0.03)
View(malmsbury_cleaned)
malmsbury_cleaned <- malmsbury_cleaned %>%
mutate( sg_smooth = sg_smooth <- sgolayfilt(malmsbury_cleaned$level, p = 4, n = 99),
sg_diff = sg_diff <- abs(sg_smooth - level),
sg_diff_con = sg_diff >= 0.03)
View(malmsbury_cleaned)
malmsbury_cleaned1 <- malmsbury_cleaned %>%
filter(!sg_diff_con)
malmsbury_cleaned1 <- malmsbury_cleaned %>%
dplyr::filter(!sg_diff_con)
View(malmsbury_cleaned1)
# Read verified data
verified <- read_csv("406220.csv")  %>%
select(timestamp = Datetime ,
verified_level = `Water Level` ,
qc = QC ) %>%
mutate(timestamp = lubridate::dmy_hms(timestamp))
verified_2021 <- verified %>%
arrange(timestamp) %>%
dplyr::filter( between(as.Date(timestamp), as.Date("2021-01-01"),
as.Date("2021-12-31")))
smoothed <- sgolayfilt(malmsbury_21$level, p = 6, n = 99)
smoothed1 <- sgolayfilt(malmsbury_21$level, p = 4, n = 99)
plot_ly() %>%
# add_trace(x = malmsbury_21_or$timestamp , y = malmsbury_21_ori$level, type = "scatter",
#            mode = "lines", name = "Original", line=(list(width =0.5))) %>%
add_trace(x = malmsbury_21$timestamp, y = malmsbury_21$level, type = "scatter",
mode = "lines" , name = "FSL and Min removed", line=(list(width = 0.75))) %>%
add_trace(x= verified_2021$timestamp, y =verified_2021$verified_level, type = "scatter",
mode = "lines", name= "wims", line = (list(width = 1))) %>%
add_trace(x=malmsbury_cleaned$timestamp, y=malmsbury_cleaned$level, type = "scatter",
mode= "lines",name="ewma", line = (list(width = 1)))%>%
add_trace(x = malmsbury_cleaned1$timestamp, y = malmsbury_cleaned1$level , type = "scatter",
mode = "lines", name = "sg cleaned", line=(list(width = 1.5))) %>%
add_trace(x = malmsbury_21$timestamp, y = smoothed1 , type = "scatter",
mode = "lines", name = "savitzky golay p4", line=(list(width = 1.5))) %>%
layout(title = 'original vs smooth',
xaxis = list(title = 'timestamp'),
yaxis = list(title = 'level'))
plot_ly() %>%
# add_trace(x = malmsbury_21_or$timestamp , y = malmsbury_21_ori$level, type = "scatter",
#            mode = "lines", name = "Original", line=(list(width =0.5))) %>%
add_trace(x = malmsbury_21$timestamp, y = malmsbury_21$level, type = "scatter",
mode = "lines" , name = "FSL and Min removed", line=(list(width = 0.75))) %>%
add_trace(x= verified_2021$timestamp, y =verified_2021$verified_level, type = "scatter",
mode = "lines", name= "wims", line = (list(width = 1))) %>%
add_trace(x=malmsbury_cleaned$timestamp, y=malmsbury_cleaned$level, type = "scatter",
mode= "lines",name="ewma", line = (list(width = 1)))%>%
add_trace(x = malmsbury_cleaned1$timestamp, y = malmsbury_cleaned1$level , type = "scatter",
mode = "lines", name = "sg cleaned", line=(list(width = 1.5))) %>%
# add_trace(x = malmsbury_21$timestamp, y = smoothed1 , type = "scatter",
#           mode = "lines", name = "savitzky golay p4", line=(list(width = 1.5))) %>%
layout(title = 'original vs smooth',
xaxis = list(title = 'timestamp'),
yaxis = list(title = 'level'))
malmsbury_rate_rise <- malmsbury_cleaned1[1:2]
dh <- malmsbury_rate_rise$level - malmsbury_rate_rise$lag(level)
dh <- malmsbury_rate_rise$level - lag(malmsbury_rate_rise$level)
malmsbury_rate_rise <- malmsbury_rate_rise %>%
mutate(  dh = dh <- malmsbury_rate_rise$level - lag(malmsbury_rate_rise$level),
dt = dt <- malmsbury_rate_rise$timestamp - lag(malmsbury_rate_rise$timestamp),
rise_rate = rise_rate <- dh/dt
)
malmsbury_rate_rise <- malmsbury_rate_rise %>%
mutate(  dh = dh <- malmsbury_rate_rise$level - lag(malmsbury_rate_rise$level),
dt = dt <- malmsbury_rate_rise$timestamp - lag(malmsbury_rate_rise$timestamp)
)
View(malmsbury_rate_rise)
malmsbury_rate_rise <- malmsbury_rate_rise %>%
mutate(  dh = dh <- abs(malmsbury_rate_rise$level - lag(malmsbury_rate_rise$level)),
dt = dt <- malmsbury_rate_rise$timestamp - lag(malmsbury_rate_rise$timestamp)
)
malmsbury_rate_rise <- malmsbury_rate_rise %>%
mutate(  dh = dh <- abs(malmsbury_rate_rise$level - lag(malmsbury_rate_rise$level)),
dt = dt <- malmsbury_rate_rise$timestamp - lag(malmsbury_rate_rise$timestamp),
rate = rate <- dh / as.numeric(dt)
)
View(malmsbury_rate_rise)
malmsbury_rate_rise <- malmsbury_rate_rise %>%
mutate(  dh = dh <- abs(malmsbury_rate_rise$level - lag(malmsbury_rate_rise$level)),
dt = dt <- malmsbury_rate_rise$timestamp - lag(malmsbury_rate_rise$timestamp),
rate = rate <- dh / as.numeric(dt),
rate = round(rate,2)
)
View(malmsbury_rate_rise)
malmsbury_rate_rise <- malmsbury_rate_rise %>%
mutate(  dh = dh <- abs(malmsbury_rate_rise$level - lag(malmsbury_rate_rise$level)),
dt = dt <- malmsbury_rate_rise$timestamp - lag(malmsbury_rate_rise$timestamp),
rate = rate <- dh / as.numeric(dt),
rate = round(rate,5)
)
View(malmsbury_rate_rise)
malmsbury_rate_rise <- malmsbury_rate_rise %>%
mutate (rate_rise = rate_rise <- rate >= 0.0023)
View(malmsbury_rate_rise)
malmsbury_rate_rise1 <- malmsbury_rate_rise %>%
dplyr::filter(!rate_rise)
plot_ly() %>%
# add_trace(x = malmsbury_21_or$timestamp , y = malmsbury_21_ori$level, type = "scatter",
#            mode = "lines", name = "Original", line=(list(width =0.5))) %>%
add_trace(x = malmsbury_21$timestamp, y = malmsbury_21$level, type = "scatter",
mode = "lines" , name = "FSL and Min removed", line=(list(width = 0.75))) %>%
add_trace(x= verified_2021$timestamp, y =verified_2021$verified_level, type = "scatter",
mode = "lines", name= "wims", line = (list(width = 1))) %>%
add_trace(x=malmsbury_cleaned$timestamp, y=malmsbury_cleaned$level, type = "scatter",
mode= "lines",name="ewma", line = (list(width = 1)))%>%
add_trace(x = malmsbury_cleaned1$timestamp, y = malmsbury_cleaned1$level , type = "scatter",
mode = "lines", name = "sg cleaned", line=(list(width = 1.5))) %>%
add_trace(x = malmsbury_rate_rise1$timestamp, y = malmsbury_rate_rise$level , type = "scatter",
mode = "lines", name = "savitzky golay p4", line=(list(width = 1.5))) %>%
layout(title = 'original vs smooth',
xaxis = list(title = 'timestamp'),
yaxis = list(title = 'level'))
plot_ly() %>%
# add_trace(x = malmsbury_21_or$timestamp , y = malmsbury_21_ori$level, type = "scatter",
#            mode = "lines", name = "Original", line=(list(width =0.5))) %>%
add_trace(x = malmsbury_21$timestamp, y = malmsbury_21$level, type = "scatter",
mode = "lines" , name = "FSL and Min removed", line=(list(width = 0.75))) %>%
add_trace(x= verified_2021$timestamp, y =verified_2021$verified_level, type = "scatter",
mode = "lines", name= "wims", line = (list(width = 1))) %>%
add_trace(x=malmsbury_cleaned$timestamp, y=malmsbury_cleaned$level, type = "scatter",
mode= "lines",name="ewma", line = (list(width = 1)))%>%
add_trace(x = malmsbury_cleaned1$timestamp, y = malmsbury_cleaned1$level , type = "scatter",
mode = "lines", name = "sg cleaned", line=(list(width = 1.5))) %>%
add_trace(x = malmsbury_rate_rise1$timestamp, y = malmsbury_rate_rise1$level , type = "scatter",
mode = "lines", name = "savitzky golay p4", line=(list(width = 1.5))) %>%
layout(title = 'original vs smooth',
xaxis = list(title = 'timestamp'),
yaxis = list(title = 'level'))
plot_ly() %>%
# add_trace(x = malmsbury_21_or$timestamp , y = malmsbury_21_ori$level, type = "scatter",
#            mode = "lines", name = "Original", line=(list(width =0.5))) %>%
add_trace(x = malmsbury_21$timestamp, y = malmsbury_21$level, type = "scatter",
mode = "lines" , name = "FSL and Min removed", line=(list(width = 0.75))) %>%
add_trace(x= verified_2021$timestamp, y =verified_2021$verified_level, type = "scatter",
mode = "lines", name= "wims", line = (list(width = 1))) %>%
add_trace(x=malmsbury_cleaned$timestamp, y=malmsbury_cleaned$level, type = "scatter",
mode= "lines",name="ewma", line = (list(width = 1)))%>%
add_trace(x = malmsbury_cleaned1$timestamp, y = malmsbury_cleaned1$level , type = "scatter",
mode = "lines", name = "sg cleaned", line=(list(width = 1.5))) %>%
add_trace(x = malmsbury_rate_rise1$timestamp, y = malmsbury_rate_rise1$level , type = "scatter",
mode = "lines", name = "rate of rise", line=(list(width = 1.5))) %>%
layout(title = 'original vs smooth',
xaxis = list(title = 'timestamp'),
yaxis = list(title = 'level'))
plot_ly() %>%
# add_trace(x = malmsbury_21_or$timestamp , y = malmsbury_21_ori$level, type = "scatter",
#            mode = "lines", name = "Original", line=(list(width =0.5))) %>%
add_trace(x = malmsbury_21$timestamp, y = malmsbury_21$level, type = "scatter",
mode = "lines" , name = "FSL and Min removed", line=(list(width = 0.75))) %>%
add_trace(x= verified_2021$timestamp, y =verified_2021$verified_level, type = "scatter",
mode = "lines", name= "wims", line = (list(width = 1))) %>%
# add_trace(x=malmsbury_cleaned$timestamp, y=malmsbury_cleaned$level, type = "scatter",
#           mode= "lines",name="ewma", line = (list(width = 1)))%>%
add_trace(x = malmsbury_cleaned1$timestamp, y = malmsbury_cleaned1$level , type = "scatter",
mode = "lines", name = "sg cleaned", line=(list(width = 1.5))) %>%
add_trace(x = malmsbury_rate_rise1$timestamp, y = malmsbury_rate_rise1$level , type = "scatter",
mode = "lines", name = "rate of rise", line=(list(width = 1.5))) %>%
layout(title = 'original vs smooth',
xaxis = list(title = 'timestamp'),
yaxis = list(title = 'level'))
malmsbury_21 <- read_csv("rawdata.csv") %>%
select(timestamp = Timestamp, level = Level1) %>%
arrange(timestamp) %>%
dplyr::filter( !is.na(level) & level !=0 & between(as.Date(timestamp), as.Date("2021-01-01"),
as.Date("2021-12-31")))
malmsbury_21_ori <- malmsbury_21
full_supply_level <- 447.8
min_level <- 435.0
malmsbury_21 <- malmsbury_21 %>%
mutate(min = level <= min_level,
FSL = level > full_supply_level + 2,
MAD = abs(level - median(level)) / mad(level) >= 3.5
)
malmsbury_21 <- malmsbury_21 %>%
dplyr::filter (!FSL, !min, !MAD)
malmsbury_play <- malmsbury_21
malm_level <- malmsbury_play$level
malm_time <- malmsbury_play$timestamp
malmsbury_zoo <- zoo(malm_level, malm_time)
malmsbury_cleaned<- malmsbury_play %>%
mutate( ewma = ewma <- EMA(malmsbury_zoo, n = 288))
smoothed <- sgolayfilt(malmsbury_21$level, p = 6, n = 99)
smoothed1 <- sgolayfilt(malmsbury_21$level, p = 4, n = 99)
malmsbury_cleaned <- malmsbury_cleaned %>%
mutate( sg_smooth = sg_smooth <- sgolayfilt(malmsbury_cleaned$level, p = 4, n = 99),
sg_diff = sg_diff <- abs(sg_smooth - level),
sg_diff_con = sg_diff >= 0.03)
malmsbury_cleaned1 <- malmsbury_cleaned %>%
dplyr::filter(!sg_diff_con)
# Read verified data
verified <- read_csv("406220.csv")  %>%
select(timestamp = Datetime ,
verified_level = `Water Level` ,
qc = QC ) %>%
mutate(timestamp = lubridate::dmy_hms(timestamp))
verified_2021 <- verified %>%
arrange(timestamp) %>%
dplyr::filter( between(as.Date(timestamp), as.Date("2021-01-01"),
as.Date("2021-12-31")))
malmsbury_rate_rise <- malmsbury_cleaned1[1:2]
malmsbury_rate_rise <- malmsbury_rate_rise %>%
mutate(  dh = dh <- abs(malmsbury_rate_rise$level - lag(malmsbury_rate_rise$level)),
dt = dt <- malmsbury_rate_rise$timestamp - lag(malmsbury_rate_rise$timestamp),
rate = rate <- dh / as.numeric(dt),
rate = round(rate,5)
)
malmsbury_rate_rise <- malmsbury_rate_rise %>%
mutate (rate_rise = rate_rise <- rate >= 0.0023)
View(malmsbury_rate_rise)
rate_of_rise_indices <- which(malmsbury_rate_rise$rate_rise== TRUE)
view(rate_of_rise_indices)
end_index <- rate_of_rise_indices + 96
# Remove data starting from 'start_index' to 'end_index'
my_data_frame_filtered <- my_data_frame[-(start_index:end_index), ]
# Remove data starting from 'start_index' to 'end_index'
my_data_frame_filtered <- malmsbury_rate_rise[-(start_index:end_index), ]
# Remove data starting from 'start_index' to 'end_index'
my_data_frame_filtered <- malmsbury_rate_rise[-(rate_of_rise_indices:end_index), ]
# Remove data starting from 'start_index' to 'end_index'
my_data_frame_filtered <- malmsbury_rate_rise %>%
dplyr::filter(!end_index)
# Remove data starting from 'start_index' to 'end_index'
my_data_frame_filtered <- malmsbury_rate_rise %>%
dplyr::filter(!(rate_of_rise_indices:end_index))
rate_of_rise_indices <- which(malmsbury_rate_rise$rate_rise== TRUE)
# Define the number of additional points
additional_points <- 96
# Calculate the end index
end_index <- rate_of_rise_indices + additional_points
# Select the indices
selected_indices <- c(rate_of_rise_indices, seq(rate_of_rise_indices + 1, end_index))
# Select the indices
selected_indices <- c(rate_of_rise_indices, seq(rate_of_rise_indices , end_index))
# Extract the corresponding data points
selected_data <- malmsbury_rate_rise[selected_indices, ]
# Define the number of additional points
additional_points <- 96
# Calculate the end index
end_index <- rate_of_rise_indices + additional_points
# Create a sequence of indices
selected_indices <- seq(rate_of_rise_indices, end_index)
# Iterate over the outlier indices
for (index in rate_of_rise_indices) {
# remove 96 more data points
malmsbury_rate_rise$level[index] <- malmsbury_rate_rise$level[index + 96]
}
malmsbury_21 <- read_csv("rawdata.csv") %>%
select(timestamp = Timestamp, level = Level1) %>%
arrange(timestamp) %>%
dplyr::filter( !is.na(level) & level !=0 & between(as.Date(timestamp), as.Date("2021-01-01"),
as.Date("2021-12-31")))
malmsbury_21_ori <- malmsbury_21
full_supply_level <- 447.8
min_level <- 435.0
malmsbury_21 <- malmsbury_21 %>%
mutate(min = level <= min_level,
FSL = level > full_supply_level + 2,
MAD = abs(level - median(level)) / mad(level) >= 3.5
)
malmsbury_21 <- malmsbury_21 %>%
dplyr::filter (!FSL, !min, !MAD)
malmsbury_play <- malmsbury_21
malm_level <- malmsbury_play$level
malm_time <- malmsbury_play$timestamp
malmsbury_zoo <- zoo(malm_level, malm_time)
malmsbury_cleaned<- malmsbury_play %>%
mutate( ewma = ewma <- EMA(malmsbury_zoo, n = 288))
smoothed <- sgolayfilt(malmsbury_21$level, p = 6, n = 99)
smoothed1 <- sgolayfilt(malmsbury_21$level, p = 4, n = 99)
malmsbury_cleaned <- malmsbury_cleaned %>%
mutate( sg_smooth = sg_smooth <- sgolayfilt(malmsbury_cleaned$level, p = 4, n = 99),
sg_diff = sg_diff <- abs(sg_smooth - level),
sg_diff_con = sg_diff >= 0.03)
malmsbury_cleaned1 <- malmsbury_cleaned %>%
dplyr::filter(!sg_diff_con)
# Read verified data
verified <- read_csv("406220.csv")  %>%
select(timestamp = Datetime ,
verified_level = `Water Level` ,
qc = QC ) %>%
mutate(timestamp = lubridate::dmy_hms(timestamp))
verified_2021 <- verified %>%
arrange(timestamp) %>%
dplyr::filter( between(as.Date(timestamp), as.Date("2021-01-01"),
as.Date("2021-12-31")))
malmsbury_rate_rise <- malmsbury_cleaned1[1:2]
malmsbury_rate_rise <- malmsbury_rate_rise %>%
mutate(  dh = dh <- abs(malmsbury_rate_rise$level - lag(malmsbury_rate_rise$level)),
dt = dt <- malmsbury_rate_rise$timestamp - lag(malmsbury_rate_rise$timestamp),
rate = rate <- dh / as.numeric(dt),
rate = round(rate,5)
)
malmsbury_rate_rise <- malmsbury_rate_rise %>%
mutate (rate_rise = rate_rise <- rate >= 0.0023)
# finding the indexes of the rate of rise
malmsbury_rate_rise1 <- malmsbury_rate_rise
rate_of_rise_indices <- which(malmsbury_rate_rise$rate_rise== TRUE)
rate_of_rise_indices <- which(malmsbury_rate_rise1$rate_rise== TRUE)
# Iterate over the outlier indices
for (index in rate_of_rise_indices) {
# remove 96 more data points
malmsbury_rate_rise1$level[index] <- malmsbury_rate_rise1$level[index + 96]
}
View(malmsbury_rate_rise1)
# Iterate over the outlier indices
for (index in rate_of_rise_indices) {
# Remove index + 96 points
malmsbury_rate_rise1 <- malmsbury_rate_rise1[-c(index:(index + 96)), ]
}
plot_ly() %>%
# add_trace(x = malmsbury_21_or$timestamp , y = malmsbury_21_ori$level, type = "scatter",
#            mode = "lines", name = "Original", line=(list(width =0.5))) %>%
add_trace(x = malmsbury_21$timestamp, y = malmsbury_21$level, type = "scatter",
mode = "lines" , name = "FSL and Min removed", line=(list(width = 0.75))) %>%
add_trace(x= verified_2021$timestamp, y =verified_2021$verified_level, type = "scatter",
mode = "lines", name= "wims", line = (list(width = 1))) %>%
add_trace(x=malmsbury_rate_rise1$timestamp, y=malmsbury_rate_rise1$level, type = "scatter",
mode= "lines",name="ewma", line = (list(width = 1)))%>%
add_trace(x = malmsbury_cleaned1$timestamp, y = malmsbury_cleaned1$level , type = "scatter",
mode = "lines", name = "sg cleaned", line=(list(width = 1.5))) %>%
add_trace(x = malmsbury_rate_rise1$timestamp, y = malmsbury_rate_rise1$level , type = "scatter",
mode = "lines", name = "rate of rise", line=(list(width = 1.5))) %>%
layout(title = 'original vs smooth',
xaxis = list(title = 'timestamp'),
yaxis = list(title = 'level'))
plot_ly() %>%
# add_trace(x = malmsbury_21_or$timestamp , y = malmsbury_21_ori$level, type = "scatter",
#            mode = "lines", name = "Original", line=(list(width =0.5))) %>%
add_trace(x = malmsbury_21$timestamp, y = malmsbury_21$level, type = "scatter",
mode = "lines" , name = "FSL and Min removed", line=(list(width = 0.75))) %>%
add_trace(x= verified_2021$timestamp, y =verified_2021$verified_level, type = "scatter",
mode = "lines", name= "wims", line = (list(width = 1))) %>%
add_trace(x=malmsbury_rate_rise1$timestamp, y=malmsbury_rate_rise1$level, type = "scatter",
mode= "lines",name="rate of rise removed", line = (list(width = 1)))%>%
# add_trace(x = malmsbury_cleaned1$timestamp, y = malmsbury_cleaned1$level , type = "scatter",
#           mode = "lines", name = "sg cleaned", line=(list(width = 1.5))) %>%
# add_trace(x = malmsbury_rate_rise1$timestamp, y = malmsbury_rate_rise1$level , type = "scatter",
#           mode = "lines", name = "rate of rise", line=(list(width = 1.5))) %>%
layout(title = 'original vs smooth',
xaxis = list(title = 'timestamp'),
yaxis = list(title = 'level'))
plot_ly() %>%
# add_trace(x = malmsbury_21_or$timestamp , y = malmsbury_21_ori$level, type = "scatter",
#            mode = "lines", name = "Original", line=(list(width =0.5))) %>%
# add_trace(x = malmsbury_21$timestamp, y = malmsbury_21$level, type = "scatter",
#           mode = "lines" , name = "FSL and Min removed", line=(list(width = 0.75))) %>%
# add_trace(x= verified_2021$timestamp, y =verified_2021$verified_level, type = "scatter",
#           mode = "lines", name= "wims", line = (list(width = 1))) %>%
add_trace(x=malmsbury_rate_rise1$timestamp, y=malmsbury_rate_rise1$level, type = "scatter",
mode= "lines",name="rate of rise removed", line = (list(width = 1)))%>%
# add_trace(x = malmsbury_cleaned1$timestamp, y = malmsbury_cleaned1$level , type = "scatter",
#           mode = "lines", name = "sg cleaned", line=(list(width = 1.5))) %>%
# add_trace(x = malmsbury_rate_rise1$timestamp, y = malmsbury_rate_rise1$level , type = "scatter",
#           mode = "lines", name = "rate of rise", line=(list(width = 1.5))) %>%
layout(title = 'original vs smooth',
xaxis = list(title = 'timestamp'),
yaxis = list(title = 'level'))
# Iterate over the outlier indices
for (index in rate_of_rise_indices) {
# Remove index + 96 points
malmsbury_rate_rise1 <- malmsbury_rate_rise1[-c(index:(index + 192)), ]
}
plot_ly() %>%
# add_trace(x = malmsbury_21_or$timestamp , y = malmsbury_21_ori$level, type = "scatter",
#            mode = "lines", name = "Original", line=(list(width =0.5))) %>%
# add_trace(x = malmsbury_21$timestamp, y = malmsbury_21$level, type = "scatter",
#           mode = "lines" , name = "FSL and Min removed", line=(list(width = 0.75))) %>%
# add_trace(x= verified_2021$timestamp, y =verified_2021$verified_level, type = "scatter",
#           mode = "lines", name= "wims", line = (list(width = 1))) %>%
add_trace(x=malmsbury_rate_rise1$timestamp, y=malmsbury_rate_rise1$level, type = "scatter",
mode= "lines",name="rate of rise removed", line = (list(width = 1)))%>%
# add_trace(x = malmsbury_cleaned1$timestamp, y = malmsbury_cleaned1$level , type = "scatter",
#           mode = "lines", name = "sg cleaned", line=(list(width = 1.5))) %>%
# add_trace(x = malmsbury_rate_rise1$timestamp, y = malmsbury_rate_rise1$level , type = "scatter",
#           mode = "lines", name = "rate of rise", line=(list(width = 1.5))) %>%
layout(title = 'original vs smooth',
xaxis = list(title = 'timestamp'),
yaxis = list(title = 'level'))
plot_ly() %>%
# add_trace(x = malmsbury_21_or$timestamp , y = malmsbury_21_ori$level, type = "scatter",
#            mode = "lines", name = "Original", line=(list(width =0.5))) %>%
# add_trace(x = malmsbury_21$timestamp, y = malmsbury_21$level, type = "scatter",
#           mode = "lines" , name = "FSL and Min removed", line=(list(width = 0.75))) %>%
add_trace(x= verified_2021$timestamp, y =verified_2021$verified_level, type = "scatter",
mode = "lines", name= "wims", line = (list(width = 1))) %>%
add_trace(x=malmsbury_rate_rise1$timestamp, y=malmsbury_rate_rise1$level, type = "scatter",
mode= "lines",name="rate of rise removed", line = (list(width = 1)))%>%
# add_trace(x = malmsbury_cleaned1$timestamp, y = malmsbury_cleaned1$level , type = "scatter",
#           mode = "lines", name = "sg cleaned", line=(list(width = 1.5))) %>%
# add_trace(x = malmsbury_rate_rise1$timestamp, y = malmsbury_rate_rise1$level , type = "scatter",
#           mode = "lines", name = "rate of rise", line=(list(width = 1.5))) %>%
layout(title = 'original vs smooth',
xaxis = list(title = 'timestamp'),
yaxis = list(title = 'level'))
plot_ly() %>%
add_trace(x = malmsbury_21$timestamp, y = malmsbury_21$level, type = "scatter",
mode = "lines" , name = "FSL and Min removed", line=(list(width = 0.75))) %>%
add_trace(x= verified_2021$timestamp, y =verified_2021$verified_level, type = "scatter",
mode = "lines", name= "wims", line = (list(width = 1))) %>%
add_trace(x=malmsbury_rate_rise1$timestamp, y=malmsbury_rate_rise1$level, type = "scatter",
mode= "lines",name="rate of rise removed", line = (list(width = 1)))%>%
layout(title = 'original vs smooth',
xaxis = list(title = 'timestamp'),
yaxis = list(title = 'level'))
